// 89~99 페이지
/*
 *  답을 외우는 건 도움이 되지 않는다.
 * 1. 직접 풀도록 노력한다
 * 2. 코드를 종이에 적는다. 
 * 3. 코드를 테스트한다.
 * 4. 종이에 적은 코들르 실제로 수행해본다.
 */

 /* 다음 자료구조, 알고리즘, 기본개념은 사용법, 구현법, 애플리케이션, 그리고 공간/시간복잡도를 알고 있어야한다

  * 핵심 자료구조 : 연결리스트, 트리/트라이/그래프, 스택/큐, 힙, Vector/ArrayList, 해시테이블
  * 알고리즘 : 너비우선탐색, 깊이우선탐색, 이진탐색, 병합정렬, 퀵정렬
  * 개념 : 비트마스킹, 메모리(스택vs힙), 재귀, 동적 프로그래밍, bigO
  */


  /*
   * 실제 문제를 푸는 과정
   * 1. 무식하게 풀기 (brute force) : 처음부터 알고리즘 효율을 높히지 말라
   * 2. 최적화 : BUD 최적화를 통해 문제를 개선한다
   *  --- BUD : 병목현상(Bottleneck), 불필요한 작업(Unnecessary Work), 중복 작업(Duplicated Work)
   */