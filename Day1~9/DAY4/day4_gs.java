// 100~113 페이지
// 최적화 및 문제풀이 기술 : BUD를 찾아라

/*
 * 어떤 부분 때문에 알고리즘이 느려지는 경우 : 알고리즘이 먼재 배열을 정렬한 뒤 특정 속성을 가진 원소를 찾는 알고리즘
 */

 // 첫 번째 단계에선 O(NlogN)이 소요되고 두 번째 단계에서 O(N)이 소요된다.
 // 두 번째 단계를 O(logN)이나 O(1)로 줄인다고 의미가 없다. 지배항은 O(NlogN)이기 때문이다

 /*
  * 문제 1. 서로 다른 정수로 이루어진 배열이 있을 때, 두 정수의 차이가 k인 쌍의 개수를 세라.
  * 예) 배열 {1, 5, 7, 9, 12, 2, 3}이 주어질 때 네 개의 쌍이 존재한다.
  */

  /*
   * 풀이1. 무식한 방법 풀기 : 모든 배열의 원소를 처음부터 훑으면서 나머지 원와 쌍 만들기
   * 풀이2. 최적화하기 : 두 번쨰 원소를 얼마나 빨리 찾을지가 관건. 해시테이블을 이용하면 O(N)으로 풀 수 있다 
   */

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

/*
 * 문제 2. a,b,c,d가 1에서 1000사이에 있는 정수 값 중 하나 일 때, a^3 + b^3 = c^3 + d^3을 만족하는 모든 자연수 출력하기
 */

 /*
  * 풀이1. 무식하게 : 4중 루프 돌기(O(N^4))
  * 풀이2. 불필요 부분 찾기 : a, b, c값을 대입하면 d의 값은 대입할 필요가 없다. d를 찾으면 루프를 빠져나온다.
  * 또한 수학적 계삭을 통해 d = 세제곱루트(a^3 + b^3 - c^3)이라는 것을 통해 O(N^3)까지 줄일 수 있다
  * 풀이3. 중복 작업 찾기 : 근본적으로 (a,b)와 (c,d) 쌍을 찾기 문제다. 가능한 리스트를 해시테이블로 만들면 된다. 수행시간 O(N^2)
  */